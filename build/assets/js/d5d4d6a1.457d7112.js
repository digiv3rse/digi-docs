"use strict";(self.webpackChunkdigi_docusaurus_v_1=self.webpackChunkdigi_docusaurus_v_1||[]).push([[1094],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>g});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),y=s(n),u=r,g=y["".concat(c,".").concat(u)]||y[u]||d[u]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[y]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2683:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const o={title:"Creating a Contract"},i=void 0,l={unversionedId:"smart-contracts/creator-tools/Deploy1155Contract",id:"smart-contracts/creator-tools/Deploy1155Contract",isDocsHomePage:!1,title:"Creating a Contract",description:"---",source:"@site/docs/smart-contracts/creator-tools/Deploy1155Contract.mdx",sourceDirName:"smart-contracts/creator-tools",slug:"/smart-contracts/creator-tools/Deploy1155Contract",permalink:"/docs/smart-contracts/creator-tools/Deploy1155Contract",editUrl:"https://github.com/digiv3rse/digi-docs/blob/main/docs/smart-contracts/creator-tools/Deploy1155Contract.mdx",version:"current",frontMatter:{title:"Creating a Contract"},sidebar:"createtools",previous:{title:"Events for Indexing and Integration Overview",permalink:"/docs/smart-contracts/creator-tools/events"},next:{title:"Creating a Token",permalink:"/docs/smart-contracts/creator-tools/Creating1155Token"}},c=[{value:"Calling the Factory Contract",id:"calling-the-factory-contract",children:[]},{value:"Royalty Configuration",id:"royalty-configuration",children:[{value:"Supply Royalty",id:"supply-royalty",children:[]}]},{value:"Contract URI",id:"contract-uri",children:[]},{value:"Setup Actions",id:"setup-actions",children:[]}],s={toc:c},p="wrapper";function y(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("hr",null),(0,r.yg)("p",null,"All 1155 contracts created from DiGi are deployed by calling a central factory contract.\nWhen calling this factory it will deploy a minimal proxy contract that is upgradeable.\nAll upgrades are opt-in and must be done manually on a per contract basis by the user."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/digiv3rse/digi-protocol/blob/main/packages/1155-contracts/src/factory/DiGiCreator1155FactoryImpl.sol"},"Factory Contract Code")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/digiv3rse/digi-protocol/tree/main/packages/protocol-deployments/addresses"},"Deployed Addresses")),(0,r.yg)("li",{parentName:"ul"},"Factory Proxy Address 0x777777C338d93e2C7adf08D102d45CA7CC4Ed021 on all networks")),(0,r.yg)("h2",{id:"calling-the-factory-contract"},"Calling the Factory Contract"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"createContract")," function on the factory is responsible for deploying a new 1155 contract.\nThe ",(0,r.yg)("inlineCode",{parentName:"p"},"setupActions")," parameter allows for multiple actions to be called when deploying the contract.\nSuch as creating a token and sale in the same transaction as deploying the contract."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"contractURI"),": The URI for the contract metadata"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"name"),": The name of the contract"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"defaultRoyaltyConfiguration"),": The default royalty configuration for the contract"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"defaultAdmin"),": The default admin for the contract"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"setupActions"),": The actions to perform on the new contract upon initialization (optional)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"function createContract(\n    string calldata newContractURI,\n    string calldata name,\n    ICreatorRoyaltiesControl.RoyaltyConfiguration memory defaultRoyaltyConfiguration,\n    address payable defaultAdmin,\n    bytes[] calldata setupActions\n) external returns (address)\n")),(0,r.yg)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"The contract supports multicall so multiple functions can be called to set up the contract in a single transaction."))),(0,r.yg)("h2",{id:"royalty-configuration"},"Royalty Configuration"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"defaultRoyaltyConfiguration")," sets contract-wide royalties.\nNote, that royalties can also be set at the token level.\nThe parameter can be passed in with the following details: "),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"royaltyMintSchedule"),": 1/N tokens are minted to the royalty recipient"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"royaltyBPS"),": The royalty amount in basis points for secondary sales."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"royaltyRecipient"),": The address that will receive the royalty payments.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"struct RoyaltyConfiguration {\n    uint32 royaltyMintSchedule;\n    uint32 royaltyBPS;\n    address royaltyRecipient;\n}\n")),(0,r.yg)("h3",{id:"supply-royalty"},"Supply Royalty"),(0,r.yg)("p",null,"When selling a token, a creator has the opportunity to reserve a certain percentage of the tokens minted for themselves.\nThe tokens are minted to them as the mints occur using the ",(0,r.yg)("inlineCode",{parentName:"p"},"royaltyMintSchedule"),"."),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"getRoyalties")," can be called on a contract to view the royalty info a specific token.\nCalling it with tokenId 0 will return the contract level information."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"function getRoyalties(uint256 tokenId) public view returns (RoyaltyConfiguration memory)  \n")),(0,r.yg)("h2",{id:"contract-uri"},"Contract URI"),(0,r.yg)("p",null,"The Contract URI contains contract specific details. This metadata is stored in a JSON file on IPFS.\nThe uri is retrieved via the ",(0,r.yg)("inlineCode",{parentName:"p"},"contractURI()")," call on the contract."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"type CollectionMetadata = {\n  name?: string\n  description?: string\n  image?: string\n  imageURI?: string\n  animation_url?: string\n  animationURI?: string\n  seller_fee_basis_points?: string\n  seller_fee_recipient?: string\n  storefront?: {\n    theme?: StorefrontTheme\n  }\n}\n")),(0,r.yg)("h2",{id:"setup-actions"},"Setup Actions"),(0,r.yg)("p",null,"An optional param that is encoded function data that can be passed in and can call a separate function within the contract.\nThis allows creating a token and setting permissions in the same transaction of creating the contract. Actions that can be called:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Creating a token"),(0,r.yg)("li",{parentName:"ul"},"Setting the salesConfig"),(0,r.yg)("li",{parentName:"ul"},"Granting permissions/minter role"),(0,r.yg)("li",{parentName:"ul"},"Admin minting tokens")))}y.isMDXComponent=!0}}]);