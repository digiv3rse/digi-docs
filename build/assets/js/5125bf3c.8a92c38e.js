"use strict";(self.webpackChunkdigi_docusaurus_v_1=self.webpackChunkdigi_docusaurus_v_1||[]).push([[2560],{5680:(e,n,a)=>{a.d(n,{xA:()=>c,yg:()=>g});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),d=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return a?t.createElement(g,s(s({ref:n},c),{},{components:a})):t.createElement(g,s({ref:n},c))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=a[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6982:(e,n,a)=>{a.d(n,{A:()=>r});var t=a(6540);const r=function(e){let{children:n,hidden:a,className:r}=e;return t.createElement("div",{role:"tabpanel",hidden:a,className:r},n)}},1931:(e,n,a)=>{a.d(n,{A:()=>p});var t=a(6540),r=a(8555);const i=function(){const e=(0,t.useContext)(r.A);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=a(53);const o="tabItem_vU9c",l="tabItemActive_cw6a";const d=37,c=39;const p=function(e){const{lazy:n,block:a,defaultValue:r,values:p,groupId:u,className:m}=e,{tabGroupChoices:g,setTabGroupChoices:y}=i(),[f,b]=(0,t.useState)(r),h=t.Children.toArray(e.children),v=[];if(null!=u){const e=g[u];null!=e&&e!==f&&p.some((n=>n.value===e))&&b(e)}const N=e=>{const n=e.currentTarget,a=v.indexOf(n),t=p[a].value;b(t),null!=u&&(y(u,t),setTimeout((()=>{(function(e){const{top:n,left:a,bottom:t,right:r}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:s}=window;return n>=0&&r<=s&&t<=i&&a>=0})(n)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l),setTimeout((()=>n.classList.remove(l)),2e3))}),150))},T=e=>{let n;switch(e.keyCode){case c:{const a=v.indexOf(e.target)+1;n=v[a]||v[0];break}case d:{const a=v.indexOf(e.target)-1;n=v[a]||v[v.length-1];break}}n?.focus()};return t.createElement("div",{className:"tabs-container"},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},m)},p.map((e=>{let{value:n,label:a}=e;return t.createElement("li",{role:"tab",tabIndex:f===n?0:-1,"aria-selected":f===n,className:(0,s.A)("tabs__item",o,{"tabs__item--active":f===n}),key:n,ref:e=>v.push(e),onKeyDown:T,onFocus:N,onClick:N},a)}))),n?(0,t.cloneElement)(h.filter((e=>e.props.value===f))[0],{className:"margin-vert--md"}):t.createElement("div",{className:"margin-vert--md"},h.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==f})))))}},8555:(e,n,a)=>{a.d(n,{A:()=>t});const t=(0,a(6540).createContext)(void 0)},439:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var t=a(8168),r=(a(6540),a(5680)),i=a(1931),s=a(6982);const o={id:"api-address-balance",title:"Getting NFTs for an Address"},l="Getting NFTs for an Address",d={unversionedId:"guides/api-address-balance",id:"guides/api-address-balance",isDocsHomePage:!1,title:"Getting NFTs for an Address",description:"Learn how to retrieve NFT data for a specific wallet address",source:"@site/docs/guides/api-address-balance.mdx",sourceDirName:"guides",slug:"/guides/api-address-balance",permalink:"/docs/guides/api-address-balance",editUrl:"https://github.com/digiv3rse/digi-docs/blob/main/docs/guides/api-address-balance.mdx",version:"current",frontMatter:{id:"api-address-balance",title:"Getting NFTs for an Address"},sidebar:"api",previous:{title:"DiGi Dev Kit (DDK)",permalink:"/docs/digi-api/ddk"},next:{title:"Getting Collection Data",permalink:"/docs/guides/api-collection-data"}},c=[{value:"NFT Balance",id:"nft-balance",children:[]},{value:"Total Sales Volume",id:"total-sales-volume",children:[]},{value:"Largest Purchase",id:"largest-purchase",children:[]},{value:"Getting Data for a Specific NFT",id:"getting-data-for-a-specific-nft",children:[{value:"Token Events",id:"token-events",children:[]},{value:"Token Sales",id:"token-sales",children:[]}]}],p={toc:c},u="wrapper";function m(e){let{components:n,...a}=e;return(0,r.yg)(u,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"getting-nfts-for-an-address"},"Getting NFTs for an Address"),(0,r.yg)("h5",{id:"learn-how-to-retrieve-nft-data-for-a-specific-wallet-address"},"Learn how to retrieve NFT data for a specific wallet address"),(0,r.yg)("hr",null),(0,r.yg)("p",null,"This guide will cover how to retrieve NFT data for an ",(0,r.yg)("inlineCode",{parentName:"p"},"ownerAddress")," and then dive deeper into how to get details for specific NFTs.\nThe following are starter examples, but there are many different possibilities with the API."),(0,r.yg)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"GraphiQL Playground: ",(0,r.yg)("a",{parentName:"p",href:"https://api.digiv3rse.xyz/graphql"},"https://api.digiv3rse.xyz/graphql")),(0,r.yg)("p",{parentName:"div"},"Demo Address: ",(0,r.yg)("inlineCode",{parentName:"p"},"jacob.eth")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"0x17cd072cBd45031EFc21Da538c783E0ed3b25DCc")),(0,r.yg)("p",{parentName:"div"},"*The API is ",(0,r.yg)("strong",{parentName:"p"},"ENS")," compatible, meaning that ",(0,r.yg)("inlineCode",{parentName:"p"},"ownerAddress")," can be an ENS name."))),(0,r.yg)("h2",{id:"nft-balance"},"NFT Balance"),(0,r.yg)("p",null,"Let's get started by looking at ",(0,r.yg)("inlineCode",{parentName:"p"},"jacob.eth")," as our example address.\nWe can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"tokens")," query and set the ",(0,r.yg)("inlineCode",{parentName:"p"},"ownerAddress"),"."),(0,r.yg)(i.A,{defaultValue:"query",values:[{label:"Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.yg)(s.A,{value:"query",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},'query JacobsNFTs {\n  tokens(networks: [{network: ETHEREUM, chain: MAINNET}], \n        pagination: {limit: 3}, \n        where: {ownerAddresses: "jacob.eth"}) {\n    nodes {\n      token {\n        collectionAddress\n        tokenId\n        name\n        owner\n        image {\n          url\n        }\n        metadata\n      }\n    }\n  }\n}\n\n'))),(0,r.yg)(s.A,{value:"response",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "tokens": {\n      "nodes": [\n        {\n          "token": {\n            "collectionAddress": "0x8d04a8c79ceb0889bdd12acdf3fa9d207ed3ff63",\n            "tokenId": "393",\n            "name": "#393 - Wave Logo",\n            "owner": "0x17cd072cbd45031efc21da538c783e0ed3b25dcc",\n            "image": {\n              "url": "https://api.blitmap.com/v1/png/393"\n            },\n            "metadata": {\n              "image": "https://api.blitmap.com/v1/png/393",\n              "name": "#393 - Wave Logo",\n              "description": "Blitmap is a community crafted art collection and universe. All data is completely on chain.\\n\\n[blitmap.com](https://www.blitmap.com)",\n              "attributes": [\n                {\n                  "trait_type": "Type",\n                  "value": "Sibling"\n                },\n                {\n                  "trait_type": "Composition",\n                  "value": "Wave (#83)"\n                },\n                {\n                  "trait_type": "Palette",\n                  "value": "Logo (#84)"\n                },\n                {\n                  "trait_type": "Affinity",\n                  "value": "Fire III"\n                },\n                {\n                  "trait_type": "Slabs",\n                  "value": "\u25e2 \u25e5 \u25e5 \u25e5"\n                },\n                {\n                  "trait_type": "Attunement",\n                  "value": "Attuned"\n                }\n              ]\n            }\n          }\n        },\n        {\n          "token": {\n            "collectionAddress": "0x8d04a8c79ceb0889bdd12acdf3fa9d207ed3ff63",\n            "tokenId": "400",\n            "name": "#400 - Optimist Logo",\n            "owner": "0x17cd072cbd45031efc21da538c783e0ed3b25dcc",\n            "image": {\n              "url": "https://api.blitmap.com/v1/png/400"\n            },\n            "metadata": {\n              "image": "https://api.blitmap.com/v1/png/400",\n              "name": "#400 - Optimist Logo",\n              "description": "Blitmap is a community crafted art collection and universe. All data is completely on chain.\\n\\n[blitmap.com](https://www.blitmap.com)",\n              "attributes": [\n                {\n                  "trait_type": "Type",\n                  "value": "Sibling"\n                },\n                {\n                  "trait_type": "Composition",\n                  "value": "Optimist (#95)"\n                },\n                {\n                  "trait_type": "Palette",\n                  "value": "Logo (#84)"\n                },\n                {\n                  "trait_type": "Affinity",\n                  "value": "Fire III"\n                },\n                {\n                  "trait_type": "Slabs",\n                  "value": "\u25e2 \u25e5 \u25e5 \u25e5"\n                },\n                {\n                  "trait_type": "Attunement",\n                  "value": "Attuned"\n                }\n              ]\n            }\n          }\n        },\n        {\n          "token": {\n            "collectionAddress": "0x8d04a8c79ceb0889bdd12acdf3fa9d207ed3ff63",\n            "tokenId": "1255",\n            "name": "#1255 - The Guy Say What",\n            "owner": "0x17cd072cbd45031efc21da538c783e0ed3b25dcc",\n            "image": {\n              "url": "https://api.blitmap.com/v1/png/1255"\n            },\n            "metadata": {\n              "image": "https://api.blitmap.com/v1/png/1255",\n              "name": "#1255 - The Guy Say What",\n              "description": "Blitmap is a community crafted art collection and universe. All data is completely on chain.\\n\\n[blitmap.com](https://www.blitmap.com)",\n              "attributes": [\n                {\n                  "trait_type": "Type",\n                  "value": "Sibling"\n                },\n                {\n                  "trait_type": "Composition",\n                  "value": "The Guy (#78)"\n                },\n                {\n                  "trait_type": "Palette",\n                  "value": "Say What (#63)"\n                },\n                {\n                  "trait_type": "Affinity",\n                  "value": "Fire III"\n                },\n                {\n                  "trait_type": "Slabs",\n                  "value": "\u25e2 \u25e2 \u25e4 \u25e5"\n                },\n                {\n                  "trait_type": "Attunement",\n                  "value": "Attuned"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.yg)("p",null,"In this example, we have set the ",(0,r.yg)("inlineCode",{parentName:"p"},"limit")," to 3 NFTs, but the max size of the response can be up to ",(0,r.yg)("inlineCode",{parentName:"p"},"500"),".\nHowever, recommend using the ",(0,r.yg)("inlineCode",{parentName:"p"},"pagination")," parameters to meter the size of your responses."),(0,r.yg)("p",null,"Note, that it is possible to grab all the ",(0,r.yg)("inlineCode",{parentName:"p"},"events")," with each NFT by specifying it in the query."),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"total-sales-volume"},"Total Sales Volume"),(0,r.yg)("p",null,"Now we can look at the total sales volume for this specific address by using ",(0,r.yg)("inlineCode",{parentName:"p"},"aggregateStat"),".\nWe can see that it has sold 42 NFTs for a total of 90 ETH."),(0,r.yg)(i.A,{defaultValue:"query",values:[{label:"Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.yg)(s.A,{value:"query",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},'query TotalAddressSales {\n  aggregateStat {\n    salesVolume(where: {ownerAddresses: "jacob.eth"}) {\n      totalCount\n      chainTokenPrice\n    }\n  }\n}\n'))),(0,r.yg)(s.A,{value:"response",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "aggregateStat": {\n      "salesVolume": {\n        "totalCount": 42,\n        "chainTokenPrice": 90.2698\n      }\n    }\n  }\n}\n')))),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"largest-purchase"},"Largest Purchase"),(0,r.yg)("p",null,"Lastly, we can get the largest on-chain ETH purchase this address has made using the ",(0,r.yg)("inlineCode",{parentName:"p"},"sales")," query and sorting by descending ",(0,r.yg)("inlineCode",{parentName:"p"},"NATIVE_PRICE"),".\nNative price is sales price in the currency that was used in the sale transaction.\nRunning the query, we can see that ",(0,r.yg)("a",{parentName:"p",href:"https://etherscan.io/tx/0x4fa67eb3963d5c652cd57416064059eae315e65b3bfb844da27de23a1a8908c6"},"5 ETH was paid")," for a LilNoun on May 16th, 2022."),(0,r.yg)(i.A,{defaultValue:"query",values:[{label:"Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.yg)(s.A,{value:"query",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},'query TopPurchaseForAnAddress {\n  sales(where: {buyerAddresses: "jacob.eth"}, \n        sort: {sortKey: NATIVE_PRICE, sortDirection: DESC}, \n        pagination: {limit: 1}) {\n    nodes {\n      sale {\n        price {\n          nativePrice {\n            decimal\n          }\n        }\n        saleType\n        sellerAddress\n        transactionInfo {\n          transactionHash\n          blockTimestamp\n        }\n      }\n      token {\n        collectionAddress\n        tokenId\n        name\n        description\n      }\n    }\n  }\n}\n\n'))),(0,r.yg)(s.A,{value:"response",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sales": {\n      "nodes": [\n        {\n          "sale": {\n            "price": {\n              "nativePrice": {\n                "decimal": 5\n              }\n            },\n            "saleType": "OPENSEA_SINGLE_SALE",\n            "sellerAddress": "0x1aba5d1c1326fd704090bb01b1c12f70ab3a0252",\n            "transactionInfo": {\n              "transactionHash": "0x4fa67eb3963d5c652cd57416064059eae315e65b3bfb844da27de23a1a8908c6",\n              "blockTimestamp": "2022-05-16T22:21:19"\n            }\n          },\n          "token": {\n            "collectionAddress": "0x4b10701bfd7bfedc47d50562b76b436fbb5bdb3b",\n            "tokenId": "5",\n            "name": "Lil Noun 5",\n            "description": "Noun 5 is a member of the Nouns DAO"\n          }\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"getting-data-for-a-specific-nft"},"Getting Data for a Specific NFT"),(0,r.yg)("p",null,"Now that you have a sense of how to get data for an address, this section will cover how to get detailed data on a specific NFT.\nHowever, this same data can be retrieved in the first ",(0,r.yg)("inlineCode",{parentName:"p"},"tokens")," query used in the first example above."),(0,r.yg)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.yg)("div",{parentName:"div",className:"admonition-heading"},(0,r.yg)("h5",{parentName:"div"},(0,r.yg)("span",{parentName:"h5",className:"admonition-icon"},(0,r.yg)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.yg)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.yg)("div",{parentName:"div",className:"admonition-content"},(0,r.yg)("p",{parentName:"div"},"Collection Name: Monarchs"),(0,r.yg)("p",{parentName:"div"},"Contract Address: ",(0,r.yg)("inlineCode",{parentName:"p"},"0xc729Ce9bF1030fbb639849a96fA8BBD013680B64")),(0,r.yg)("p",{parentName:"div"},"TokenID: ",(0,r.yg)("inlineCode",{parentName:"p"},"246")))),(0,r.yg)("h3",{id:"token-events"},"Token Events"),(0,r.yg)("p",null,"Every time a transaction interacts with an NFT on the blockchain it creates an event. This query will help you view all the historical events for this NFT including: "),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Mints "),(0,r.yg)("li",{parentName:"ul"},"Transfers"),(0,r.yg)("li",{parentName:"ul"},"Approvals"),(0,r.yg)("li",{parentName:"ul"},"Sales"),(0,r.yg)("li",{parentName:"ul"},"DiGi Markets")),(0,r.yg)(i.A,{defaultValue:"query",values:[{label:"Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.yg)(s.A,{value:"query",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},'query TokenEvents {\n  token(token: {address: "0xc729Ce9bF1030fbb639849a96fA8BBD013680B64", tokenId: "246"}) {\n    events(sort: {sortKey: CREATED, sortDirection: ASC}) {\n      eventType\n      transactionInfo {\n        blockTimestamp\n        transactionHash\n      }\n    }\n  }\n}\n'))),(0,r.yg)(s.A,{value:"response",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "token": {\n      "events": [\n        {\n          "eventType": "TRANSFER_EVENT",\n          "transactionInfo": {\n            "blockTimestamp": "2021-10-06T16:24:31",\n            "transactionHash": "0x29426d81789f92f148a4361fd346c16ade86724081a22166586372787f9ff444"\n          }\n        },\n        {\n          "eventType": "MINT_EVENT",\n          "transactionInfo": {\n            "blockTimestamp": "2021-10-06T16:24:31",\n            "transactionHash": "0x29426d81789f92f148a4361fd346c16ade86724081a22166586372787f9ff444"\n          }\n        }\n      ]\n    }\n  }\n}\n')))),(0,r.yg)("h3",{id:"token-sales"},"Token Sales"),(0,r.yg)("p",null,"This query will help you get specific data for all sales pertaining to this NFT across all markets:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"DiGi "),(0,r.yg)("li",{parentName:"ul"},"OpenSea"),(0,r.yg)("li",{parentName:"ul"},"LooksRare "),(0,r.yg)("li",{parentName:"ul"},"Nouns Auctions"),(0,r.yg)("li",{parentName:"ul"},"Foundation"),(0,r.yg)("li",{parentName:"ul"},"and more")),(0,r.yg)(i.A,{defaultValue:"query",values:[{label:"Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,r.yg)(s.A,{value:"query",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-graphql"},'query TokenSale {\n  token(token: {address: "0xc729Ce9bF1030fbb639849a96fA8BBD013680B64", tokenId: "246"}) {\n    sales {\n      saleType\n      saleContractAddress\n      sellerAddress\n      buyerAddress\n      transactionInfo {\n        blockTimestamp\n        transactionHash\n      }\n      price {\n        nativePrice {\n          decimal\n          currency {\n            name\n          }\n        }\n      }\n    }\n  }\n}\n\n'))),(0,r.yg)(s.A,{value:"response",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "token": {\n      "sales": [\n        {\n          "saleType": "OPENSEA_SINGLE_SALE",\n          "saleContractAddress": "0x7f268357a8c2552623316e2562d90e642bb538e5",\n          "sellerAddress": "0x757b4d4bcd7d02d0f2ce81c5acba6c6f7ff05df6",\n          "buyerAddress": "0x912b37e4ad159882f60de59b27882c5daf3d7e5b",\n          "transactionInfo": {\n            "blockTimestamp": "2022-05-16T19:11:30",\n            "transactionHash": "0x0a1bffd24f1aaee5ad7316c984a9e792dea705c957b16d54ed444a7abac1fbf2"\n          },\n          "price": {\n            "nativePrice": {\n              "decimal": 0.109,\n              "currency": {\n                "name": "ETH"\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n')))))}m.isMDXComponent=!0},53:(e,n,a)=>{function t(e){var n,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(a=t(e[n]))&&(r&&(r+=" "),r+=a);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}a.d(n,{A:()=>r});const r=function(){for(var e,n,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(n=t(e))&&(r&&(r+=" "),r+=n);return r}}}]);