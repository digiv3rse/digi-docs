"use strict";(self.webpackChunkdigi_docusaurus_v_1=self.webpackChunkdigi_docusaurus_v_1||[]).push([[3849],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>g});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7562:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(8168),o=(n(6540),n(5680));const a={title:"Creating a Token"},i=void 0,c={unversionedId:"smart-contracts/creator-tools/Creating1155Token",id:"smart-contracts/creator-tools/Creating1155Token",isDocsHomePage:!1,title:"Creating a Token",description:"---",source:"@site/docs/smart-contracts/creator-tools/Creating1155Token.mdx",sourceDirName:"smart-contracts/creator-tools",slug:"/smart-contracts/creator-tools/Creating1155Token",permalink:"/build/index.html/docs/smart-contracts/creator-tools/Creating1155Token",editUrl:"https://github.com/digiv3rse/digi-docs/blob/main/docs/smart-contracts/creator-tools/Creating1155Token.mdx",version:"current",frontMatter:{title:"Creating a Token"},sidebar:"createtools",previous:{title:"Creating a Contract",permalink:"/build/index.html/docs/smart-contracts/creator-tools/Deploy1155Contract"},next:{title:"Selling a Token",permalink:"/build/index.html/docs/smart-contracts/creator-tools/Selling1155"}},l=[{value:"Updating Metadata",id:"updating-metadata",children:[]}],s={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("hr",null),(0,o.yg)("p",null,"Calling ",(0,o.yg)("inlineCode",{parentName:"p"},"setupNewTokenWithCreateReferral")," on a deployed 1155 contract will create a new token.\nIn addition, by passing in your address as the ",(0,o.yg)("inlineCode",{parentName:"p"},"createReferral")," will yield you rewards from those mints.\nAll tokens start at tokenId 1 and increment up.\ntokenId 0 is reserved for the contract information.\n",(0,o.yg)("inlineCode",{parentName:"p"},"maxSupply")," should be set to ",(0,o.yg)("inlineCode",{parentName:"p"},"MAX_INT")," for an open edition."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://github.com/digiv3rse/digi-protocol/blob/main/packages/1155-contracts/src/nft/DiGiCreator1155Impl.sol#L272C1-L276C101"},"View source code here.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function setupNewTokenWithCreateReferral(\n    string calldata newURI,\n    uint256 maxSupply,\n    address createReferral\n) public onlyAdminOrRole(CONTRACT_BASE_ID, PERMISSION_BIT_MINTER) nonReentrant returns (uint256)\n")),(0,o.yg)("h2",{id:"updating-metadata"},"Updating Metadata"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"updateTokenURI")," updates the token URI for a token.\nWon't work for tokenId 0 since that is reserved for the contract level information."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function updateTokenURI(\n    uint256 tokenId, \n    string memory _newURI\n)\n")),(0,o.yg)("p",null,"Updates the contract metadata."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function updateContractMetadata(\n    string memory _newURI, \n    string memory _newName\n)\n")))}d.isMDXComponent=!0}}]);